// Responsive breakpoints
@mixin respond-to($breakpoint) {
    @if $breakpoint == "sm" {
        @media (min-width: 576px) { @content; }
    }
    @if $breakpoint == "md" {
        @media (min-width: 768px) { @content; }
    }
    @if $breakpoint == "lg" {
        @media (min-width: 992px) { @content; }
    }
    @if $breakpoint == "xl" {
        @media (min-width: 1200px) { @content; }
    }
}

// Flexbox utilities
@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

// Typography
@mixin heading-1 {
    font-family: var(--font-family-heading);
    font-size: 2rem;
    font-weight: var(--font-weight-bold);
    line-height: 1.2;
}

@mixin heading-2 {
    font-family: var(--font-family-heading);
    font-size: 1.5rem;
    font-weight: var(--font-weight-bold);
    line-height: 1.3;
}

// Spacing
@mixin padding($space) {
    padding: $space;
}

@mixin margin($space) {
    margin: $space;
}

// Grid
@mixin make-col($size) {
    flex: 0 0 calc((100% / #{$grid-columns}) * #{$size});
    max-width: calc((100% / #{$grid-columns}) * #{$size});
}

// Shadows
@mixin box-shadow($level: 1) {
    @if $level == 1 {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    } @else if $level == 2 {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    } @else if $level == 3 {
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }
}

// Transitions
@mixin transition($properties...) {
    $transitions: ();
    @each $property in $properties {
        $transitions: append($transitions, $property var(--transition-base), comma);
    }
    transition: $transitions;
}

// Buttons
@mixin button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-small) var(--spacing-medium);
    border-radius: var(--border-radius);
    font-weight: var(--font-weight-bold);
    text-decoration: none;
    cursor: pointer;
    @include transition(background-color, color, border-color, box-shadow);

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
}

// Forms
@mixin form-field {
    width: 100%;
    padding: var(--spacing-small);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    font-family: var(--font-family-base);
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
    @include transition(border-color, box-shadow);

    &:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(0, 115, 170, 0.2);
    }
}

// Cards
@mixin card {
    background-color: white;
    border-radius: var(--border-radius);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    padding: var(--spacing-medium);
}

// Lists
@mixin list-unstyled {
    list-style: none;
    padding: 0;
    margin: 0;
}

// Z-index
@mixin z-index($key) {
    @if map-has-key($z-index, $key) {
        z-index: map-get($z-index, $key);
    } @else {
        @warn "No z-index found for `#{$key}`. Available z-indices are: #{map-keys($z-index)}.";
    }
}

// Container
@mixin container {
    width: 100%;
    max-width: var(--container-width);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--spacing-medium);
    padding-right: var(--spacing-medium);
} 