!function(){"use strict";var e={454:function(e,t,a){a.d(t,{UI:function(){return s}});class r{constructor(){this.initialized=!1}init(){this.initialized||(this.initializeComponents(),this.bindEvents(),this.initialized=!0)}initializeComponents(){this.initializeTabs(),this.initializeTooltips(),this.initializeModals()}bindEvents(){document.addEventListener("click",(e=>{e.target.matches(".athlete-dashboard-toggle")&&this.handleToggle(e),e.target.matches(".athlete-dashboard-modal-trigger")&&this.handleModalTrigger(e)}))}initializeTabs(){document.querySelectorAll(".athlete-dashboard-tabs").forEach((e=>{const t=e.querySelectorAll('[role="tab"]'),a=e.querySelectorAll('[role="tabpanel"]');t.forEach((r=>{r.addEventListener("click",(()=>{t.forEach((e=>e.setAttribute("aria-selected","false"))),a.forEach((e=>e.hidden=!0)),r.setAttribute("aria-selected","true");const s=e.querySelector(`#${r.getAttribute("aria-controls")}`);s&&(s.hidden=!1)}))})),t[0]&&t[0].click()}))}initializeTooltips(){document.querySelectorAll(".athlete-dashboard-tooltip").forEach((e=>{const t=e.getAttribute("data-tooltip");t&&(e.addEventListener("mouseenter",(a=>{const r=document.createElement("div");r.className="athlete-tooltip",r.textContent=t,document.body.appendChild(r);const s=e.getBoundingClientRect();r.style.left=`${s.right+5}px`,r.style.top=s.top+s.height/2-r.offsetHeight/2+"px"})),e.addEventListener("mouseleave",(()=>{document.querySelectorAll(".athlete-tooltip").forEach((e=>e.remove()))})))}))}initializeModals(){document.querySelectorAll(".athlete-dashboard-modal").forEach((e=>{const t=document.createElement("div");t.className="athlete-modal-backdrop",e.before(t);const a=document.createElement("button");a.className="athlete-modal-close",a.innerHTML="Ã—",a.addEventListener("click",(()=>this.closeModal(e))),e.appendChild(a),this.closeModal(e)}))}handleToggle(e){e.preventDefault();const t=document.querySelector(e.target.dataset.target);if(t){const e="none"===t.style.display;t.style.display=e?"block":"none",t.style.height=e?`${t.scrollHeight}px`:"0"}}handleModalTrigger(e){e.preventDefault();const t=e.target.dataset.modal,a=document.getElementById(t);a&&this.openModal(a)}openModal(e){e.style.display="block",e.previousElementSibling?.classList.add("active"),document.body.style.overflow="hidden"}closeModal(e){e.style.display="none",e.previousElementSibling?.classList.remove("active"),document.body.style.overflow=""}static createElement(e,t,a=""){const r=document.createElement(e);return t&&(r.className=t),a&&(r.textContent=a),r}static showLoading(e){const t=r.createElement("div","athlete-loading");return e.appendChild(t),t}static hideLoading(e){e?.remove()}static showError(e,t){const a=r.createElement("div","athlete-error",e);t.appendChild(a),setTimeout((()=>a.remove()),5e3)}}const s=new r;document.addEventListener("DOMContentLoaded",(()=>s.init()))}},t={};function a(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}a.d=function(e,t){for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};var r=a(454);const s=new class{constructor(){this.initialized=!1,this.stripeCard=null}init(){this.initialized||(this.bindEvents(),this.loadMembershipDetails(),this.initializeSubscriptionForms(),this.initialized=!0)}bindEvents(){document.addEventListener("click",(e=>{e.target.matches(".upgrade-plan-btn")&&this.handleUpgradePlan(e),e.target.matches(".renew-membership-btn")&&this.handleRenewal(e)})),document.addEventListener("submit",(e=>{e.target.matches(".payment-form")&&this.handlePaymentSubmit(e)}))}async loadMembershipDetails(){const e=document.getElementById("membership-details-container");if(!e)return;const t=r.UI.showLoading(e);try{const t=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_membership",nonce:window.athleteDashboard.nonce})}),a=await t.json();a.success?this.updateMembershipUI(a.data):this.showMessage("Error loading membership details. Please try again.","error",e)}catch(t){this.showMessage("Server error. Please try again later.","error",e),console.error("Membership details loading error:",t)}finally{r.UI.hideLoading(t)}}initializeSubscriptionForms(){"undefined"!=typeof Stripe&&this.initializeStripe(),document.querySelectorAll(".plan-selector").forEach((e=>{e.addEventListener("change",(e=>{const t=e.target.options[e.target.selectedIndex],a=JSON.parse(t.dataset.plan||"{}");this.updatePlanDetails(a)}))}))}initializeStripe(){if(!document.getElementById("card-element"))return;const e=Stripe(window.athleteDashboard.stripe_key).elements().create("card");e.mount("#card-element"),e.addEventListener("change",(e=>{const t=document.getElementById("card-errors");t&&(t.textContent=e.error?e.error.message:"")})),this.stripeCard=e}async handleUpgradePlan(e){e.preventDefault();const t=e.target.dataset.planId,a=document.getElementById("upgrade-form-container");if(!a)return;const s=r.UI.showLoading(a);try{const e=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_upgrade_form",nonce:window.athleteDashboard.nonce,plan_id:t})}),r=await e.json();r.success?(a.innerHTML=r.data.form,this.initializeSubscriptionForms()):this.showMessage(r.data?.message||"Error loading upgrade form.","error",a)}catch(e){this.showMessage("Server error. Please try again later.","error",a),console.error("Upgrade form loading error:",e)}finally{r.UI.hideLoading(s)}}async handleRenewal(e){e.preventDefault();const t=e.target.dataset.membershipId,a=e.target.closest(".membership-container");if(!a)return;const s=r.UI.showLoading(a);try{const e=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"process_renewal",nonce:window.athleteDashboard.nonce,membership_id:t})}),r=await e.json();r.success?(this.showMessage("Membership renewed successfully!","success",a),await this.loadMembershipDetails()):this.showMessage(r.data?.message||"Error renewing membership. Please try again.","error",a)}catch(e){this.showMessage("Server error. Please try again later.","error",a),console.error("Membership renewal error:",e)}finally{r.UI.hideLoading(s)}}async handlePaymentSubmit(e){e.preventDefault();const t=e.target,a=t.querySelector('button[type="submit"]'),r=t.closest(".membership-container");if(r){a.disabled=!0;try{this.stripeCard?await this.processStripePayment(t,r):await this.processRegularPayment(t,r)}catch(e){this.showMessage("Payment processing error. Please try again.","error",r),console.error("Payment submission error:",e)}finally{a.disabled=!1}}}async processStripePayment(e,t){const a=Stripe(window.athleteDashboard.stripe_key);try{const r=await a.createToken(this.stripeCard);r.error?this.showMessage(r.error.message,"error",t):await this.submitPaymentForm(e,t,{stripe_token:r.token.id})}catch(e){this.showMessage("Stripe processing error. Please try again.","error",t),console.error("Stripe payment error:",e)}}async processRegularPayment(e,t){await this.submitPaymentForm(e,t,{})}async submitPaymentForm(e,t,a={}){const s=r.UI.showLoading(t),n=new FormData(e);try{const r=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"process_payment",nonce:window.athleteDashboard.nonce,payment_data:JSON.stringify({...Object.fromEntries(n),...a})})}),s=await r.json();s.success?(this.showMessage("Payment processed successfully!","success",t),await this.loadMembershipDetails(),e.reset()):this.showMessage(s.data?.message||"Error processing payment. Please try again.","error",t)}catch(e){this.showMessage("Server error. Please try again later.","error",t),console.error("Payment submission error:",e)}finally{r.UI.hideLoading(s)}}updateMembershipUI(e){const t={status:document.getElementById("membership-status"),type:document.getElementById("membership-type"),expiry:document.getElementById("membership-expiry")};t.status&&(t.status.textContent=e.status),t.type&&(t.type.textContent=e.type),t.expiry&&(t.expiry.textContent=e.expiry_date),e.features.forEach((e=>{document.querySelectorAll(`.feature-${e}`).forEach((e=>{e.classList.remove("disabled"),e.classList.add("active")}))}))}updatePlanDetails(e){const t=document.getElementById("plan-price"),a=document.getElementById("plan-features");t&&(t.textContent=e.price),a&&(a.innerHTML=e.features.map((e=>`<li>${e}</li>`)).join(""))}showMessage(e,t,a){const s=a.querySelector(".membership-message")||r.UI.createElement("div","membership-message");s.className=`membership-message ${t}`,s.textContent=e,s.parentNode||a.insertBefore(s,a.firstChild),setTimeout((()=>{s.classList.add("fade-out"),setTimeout((()=>s.remove()),300)}),3e3)}};document.addEventListener("DOMContentLoaded",(()=>s.init()))}();