!function(){"use strict";var e={454:function(e,t,a){a.d(t,{UI:function(){return r}});class n{constructor(){this.initialized=!1}init(){this.initialized||(this.initializeComponents(),this.bindEvents(),this.initialized=!0)}initializeComponents(){this.initializeTabs(),this.initializeTooltips(),this.initializeModals()}bindEvents(){document.addEventListener("click",(e=>{e.target.matches(".athlete-dashboard-toggle")&&this.handleToggle(e),e.target.matches(".athlete-dashboard-modal-trigger")&&this.handleModalTrigger(e)}))}initializeTabs(){document.querySelectorAll(".athlete-dashboard-tabs").forEach((e=>{const t=e.querySelectorAll('[role="tab"]'),a=e.querySelectorAll('[role="tabpanel"]');t.forEach((n=>{n.addEventListener("click",(()=>{t.forEach((e=>e.setAttribute("aria-selected","false"))),a.forEach((e=>e.hidden=!0)),n.setAttribute("aria-selected","true");const r=e.querySelector(`#${n.getAttribute("aria-controls")}`);r&&(r.hidden=!1)}))})),t[0]&&t[0].click()}))}initializeTooltips(){document.querySelectorAll(".athlete-dashboard-tooltip").forEach((e=>{const t=e.getAttribute("data-tooltip");t&&(e.addEventListener("mouseenter",(a=>{const n=document.createElement("div");n.className="athlete-tooltip",n.textContent=t,document.body.appendChild(n);const r=e.getBoundingClientRect();n.style.left=`${r.right+5}px`,n.style.top=r.top+r.height/2-n.offsetHeight/2+"px"})),e.addEventListener("mouseleave",(()=>{document.querySelectorAll(".athlete-tooltip").forEach((e=>e.remove()))})))}))}initializeModals(){document.querySelectorAll(".athlete-dashboard-modal").forEach((e=>{const t=document.createElement("div");t.className="athlete-modal-backdrop",e.before(t);const a=document.createElement("button");a.className="athlete-modal-close",a.innerHTML="Ã—",a.addEventListener("click",(()=>this.closeModal(e))),e.appendChild(a),this.closeModal(e)}))}handleToggle(e){e.preventDefault();const t=document.querySelector(e.target.dataset.target);if(t){const e="none"===t.style.display;t.style.display=e?"block":"none",t.style.height=e?`${t.scrollHeight}px`:"0"}}handleModalTrigger(e){e.preventDefault();const t=e.target.dataset.modal,a=document.getElementById(t);a&&this.openModal(a)}openModal(e){e.style.display="block",e.previousElementSibling?.classList.add("active"),document.body.style.overflow="hidden"}closeModal(e){e.style.display="none",e.previousElementSibling?.classList.remove("active"),document.body.style.overflow=""}static createElement(e,t,a=""){const n=document.createElement(e);return t&&(n.className=t),a&&(n.textContent=a),n}static showLoading(e){const t=n.createElement("div","athlete-loading");return e.appendChild(t),t}static hideLoading(e){e?.remove()}static showError(e,t){const a=n.createElement("div","athlete-error",e);t.appendChild(a),setTimeout((()=>a.remove()),5e3)}}const r=new n;document.addEventListener("DOMContentLoaded",(()=>r.init()))}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,a),o.exports}a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};var n=a(454);const r=new class{constructor(){this.initialized=!1}init(){this.initialized||(this.bindEvents(),this.initializeAttendanceCalendar(),this.loadAttendanceStats(),this.initialized=!0)}bindEvents(){document.addEventListener("click",(e=>{e.target.matches(".record-attendance-btn")&&this.handleRecordAttendance(e)})),document.addEventListener("change",(e=>{e.target.matches(".attendance-period-selector")&&this.handlePeriodChange(e)}))}initializeAttendanceCalendar(){const e=new Date,t=new Date(e.getFullYear(),e.getMonth(),1),a=new Date(e.getFullYear(),e.getMonth()+1,0);this.loadAttendanceData(t,a)}async loadAttendanceData(e,t){const a=document.getElementById("attendance-calendar-container");if(!a)return;const r=n.UI.showLoading(a);try{const n=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_attendance",nonce:window.athleteDashboard.nonce,start_date:this.formatDate(e),end_date:this.formatDate(t)})}),r=await n.json();r.success?this.renderAttendanceCalendar(r.data):this.showMessage("Error loading attendance data. Please try again.","error",a)}catch(e){this.showMessage("Server error. Please try again later.","error",a),console.error("Attendance data loading error:",e)}finally{n.UI.hideLoading(r)}}async loadAttendanceStats(){const e=document.getElementById("attendance-stats-container");if(!e)return;const t=n.UI.showLoading(e);try{const t=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_attendance_stats",nonce:window.athleteDashboard.nonce})}),a=await t.json();a.success?this.updateAttendanceStats(a.data):this.showMessage("Error loading attendance stats. Please try again.","error",e)}catch(t){this.showMessage("Server error. Please try again later.","error",e),console.error("Attendance stats loading error:",t)}finally{n.UI.hideLoading(t)}}async handleRecordAttendance(e){e.preventDefault();const t=e.target.dataset.date,a=e.target.closest(".attendance-container");if(!a)return;const r=n.UI.showLoading(a);try{const e=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"record_attendance",nonce:window.athleteDashboard.nonce,date:t})}),n=await e.json();n.success?(this.showMessage("Attendance recorded successfully!","success",a),await this.initializeAttendanceCalendar(),await this.loadAttendanceStats()):this.showMessage(n.data?.message||"Error recording attendance. Please try again.","error",a)}catch(e){this.showMessage("Server error. Please try again later.","error",a),console.error("Attendance recording error:",e)}finally{n.UI.hideLoading(r)}}handlePeriodChange(e){const t=e.target.value,a=this.getPeriodDates(t);this.loadAttendanceData(a.start,a.end)}getPeriodDates(e){const t=new Date;let a,n;switch(e){case"week":a=new Date(t.setDate(t.getDate()-t.getDay())),n=new Date(t.setDate(t.getDate()+6));break;case"month":default:a=new Date(t.getFullYear(),t.getMonth(),1),n=new Date(t.getFullYear(),t.getMonth()+1,0);break;case"year":a=new Date(t.getFullYear(),0,1),n=new Date(t.getFullYear(),11,31)}return{start:a,end:n}}renderAttendanceCalendar(e){const t=document.getElementById("attendance-calendar");t&&(t.innerHTML=e.calendar,e.attended_dates.forEach((e=>{const a=t.querySelector(`[data-date="${e}"]`);a&&a.classList.add("attended")})))}updateAttendanceStats(e){const t={rate:document.getElementById("attendance-rate"),currentStreak:document.getElementById("current-streak"),bestStreak:document.getElementById("best-streak")};t.rate&&(t.rate.textContent=`${e.attendance_rate}%`),t.currentStreak&&(t.currentStreak.textContent=`${e.current_streak} days`),t.bestStreak&&(t.bestStreak.textContent=`${e.best_streak} days`)}formatDate(e){return e.toISOString().split("T")[0]}showMessage(e,t,a){const r=a.querySelector(".attendance-message")||n.UI.createElement("div","attendance-message");r.className=`attendance-message ${t}`,r.textContent=e,r.parentNode||a.insertBefore(r,a.firstChild),setTimeout((()=>{r.classList.add("fade-out"),setTimeout((()=>r.remove()),300)}),3e3)}};document.addEventListener("DOMContentLoaded",(()=>r.init()))}();