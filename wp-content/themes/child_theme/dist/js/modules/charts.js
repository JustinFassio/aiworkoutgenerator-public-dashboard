!function(){"use strict";var t={454:function(t,e,a){a.d(e,{UI:function(){return r}});class o{constructor(){this.initialized=!1}init(){this.initialized||(this.initializeComponents(),this.bindEvents(),this.initialized=!0)}initializeComponents(){this.initializeTabs(),this.initializeTooltips(),this.initializeModals()}bindEvents(){document.addEventListener("click",(t=>{t.target.matches(".athlete-dashboard-toggle")&&this.handleToggle(t),t.target.matches(".athlete-dashboard-modal-trigger")&&this.handleModalTrigger(t)}))}initializeTabs(){document.querySelectorAll(".athlete-dashboard-tabs").forEach((t=>{const e=t.querySelectorAll('[role="tab"]'),a=t.querySelectorAll('[role="tabpanel"]');e.forEach((o=>{o.addEventListener("click",(()=>{e.forEach((t=>t.setAttribute("aria-selected","false"))),a.forEach((t=>t.hidden=!0)),o.setAttribute("aria-selected","true");const r=t.querySelector(`#${o.getAttribute("aria-controls")}`);r&&(r.hidden=!1)}))})),e[0]&&e[0].click()}))}initializeTooltips(){document.querySelectorAll(".athlete-dashboard-tooltip").forEach((t=>{const e=t.getAttribute("data-tooltip");e&&(t.addEventListener("mouseenter",(a=>{const o=document.createElement("div");o.className="athlete-tooltip",o.textContent=e,document.body.appendChild(o);const r=t.getBoundingClientRect();o.style.left=`${r.right+5}px`,o.style.top=r.top+r.height/2-o.offsetHeight/2+"px"})),t.addEventListener("mouseleave",(()=>{document.querySelectorAll(".athlete-tooltip").forEach((t=>t.remove()))})))}))}initializeModals(){document.querySelectorAll(".athlete-dashboard-modal").forEach((t=>{const e=document.createElement("div");e.className="athlete-modal-backdrop",t.before(e);const a=document.createElement("button");a.className="athlete-modal-close",a.innerHTML="Ã—",a.addEventListener("click",(()=>this.closeModal(t))),t.appendChild(a),this.closeModal(t)}))}handleToggle(t){t.preventDefault();const e=document.querySelector(t.target.dataset.target);if(e){const t="none"===e.style.display;e.style.display=t?"block":"none",e.style.height=t?`${e.scrollHeight}px`:"0"}}handleModalTrigger(t){t.preventDefault();const e=t.target.dataset.modal,a=document.getElementById(e);a&&this.openModal(a)}openModal(t){t.style.display="block",t.previousElementSibling?.classList.add("active"),document.body.style.overflow="hidden"}closeModal(t){t.style.display="none",t.previousElementSibling?.classList.remove("active"),document.body.style.overflow=""}static createElement(t,e,a=""){const o=document.createElement(t);return e&&(o.className=e),a&&(o.textContent=a),o}static showLoading(t){const e=o.createElement("div","athlete-loading");return t.appendChild(e),e}static hideLoading(t){t?.remove()}static showError(t,e){const a=o.createElement("div","athlete-error",t);e.appendChild(a),setTimeout((()=>a.remove()),5e3)}}const r=new o;document.addEventListener("DOMContentLoaded",(()=>r.init()))}},e={};function a(o){var r=e[o];if(void 0!==r)return r.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,a),s.exports}a.d=function(t,e){for(var o in e)a.o(e,o)&&!a.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)};var o=a(454);const r=new class{constructor(){this.initialized=!1,this.charts={}}init(){this.initialized||(this.bindEvents(),this.initializeCharts(),this.initialized=!0)}bindEvents(){document.addEventListener("change",(t=>{t.target.matches(".chart-period-selector")&&this.handlePeriodChange(t),t.target.matches(".metric-selector")&&this.handleMetricChange(t)}))}initializeCharts(){this.initializeWorkoutChart(),this.initializeAttendanceChart(),this.initializeGoalsChart(),this.initializeProgressChart()}initializeWorkoutChart(){const t=document.getElementById("workout-chart");t&&(this.charts.workout=new Chart(t,{type:"line",data:{labels:[],datasets:[{label:"Workouts",data:[],borderColor:"rgb(75, 192, 192)",tension:.1}]},options:{responsive:!0,scales:{y:{beginAtZero:!0}}}}),this.loadWorkoutData())}initializeAttendanceChart(){const t=document.getElementById("attendance-chart");t&&(this.charts.attendance=new Chart(t,{type:"bar",data:{labels:[],datasets:[{label:"Attendance",data:[],backgroundColor:"rgba(54, 162, 235, 0.2)",borderColor:"rgb(54, 162, 235)",borderWidth:1}]},options:{responsive:!0,scales:{y:{beginAtZero:!0,max:1,ticks:{stepSize:1}}}}}),this.loadAttendanceData())}initializeGoalsChart(){const t=document.getElementById("goals-chart");t&&(this.charts.goals=new Chart(t,{type:"doughnut",data:{labels:["Completed","In Progress","Not Started"],datasets:[{data:[],backgroundColor:["rgb(75, 192, 192)","rgb(255, 205, 86)","rgb(201, 203, 207)"]}]},options:{responsive:!0,plugins:{legend:{position:"bottom"}}}}),this.loadGoalsData())}initializeProgressChart(){const t=document.getElementById("progress-chart");t&&(this.charts.progress=new Chart(t,{type:"line",data:{labels:[],datasets:[{label:"Progress",data:[],borderColor:"rgb(153, 102, 255)",tension:.1}]},options:{responsive:!0,scales:{y:{beginAtZero:!0}}}}),this.loadProgressData())}async loadWorkoutData(t="30days"){const e=document.getElementById("workout-chart-container");if(!e)return;const a=o.UI.showLoading(e);try{const a=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_workout_stats",nonce:window.athleteDashboard.nonce,period:t})}),o=await a.json();o.success?this.updateWorkoutChart(o.data):this.showMessage("Error loading workout data. Please try again.","error",e)}catch(t){this.showMessage("Server error. Please try again later.","error",e),console.error("Workout data loading error:",t)}finally{o.UI.hideLoading(a)}}async loadAttendanceData(t="30days"){const e=document.getElementById("attendance-chart-container");if(!e)return;const a=o.UI.showLoading(e);try{const a=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_attendance_data",nonce:window.athleteDashboard.nonce,period:t})}),o=await a.json();o.success?this.updateAttendanceChart(o.data):this.showMessage("Error loading attendance data. Please try again.","error",e)}catch(t){this.showMessage("Server error. Please try again later.","error",e),console.error("Attendance data loading error:",t)}finally{o.UI.hideLoading(a)}}async loadGoalsData(){const t=document.getElementById("goals-chart-container");if(!t)return;const e=o.UI.showLoading(t);try{const e=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_goals_data",nonce:window.athleteDashboard.nonce})}),a=await e.json();a.success?this.updateGoalsChart(a.data):this.showMessage("Error loading goals data. Please try again.","error",t)}catch(e){this.showMessage("Server error. Please try again later.","error",t),console.error("Goals data loading error:",e)}finally{o.UI.hideLoading(e)}}async loadProgressData(t="weight"){const e=document.getElementById("progress-chart-container");if(!e)return;const a=o.UI.showLoading(e);try{const a=await fetch(window.athleteDashboard.ajax_url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"get_progress_metrics",nonce:window.athleteDashboard.nonce,metric:t})}),o=await a.json();o.success?this.updateProgressChart(o.data):this.showMessage("Error loading progress data. Please try again.","error",e)}catch(t){this.showMessage("Server error. Please try again later.","error",e),console.error("Progress data loading error:",t)}finally{o.UI.hideLoading(a)}}updateWorkoutChart(t){if(!this.charts.workout)return;this.charts.workout.data.labels=t.labels,this.charts.workout.data.datasets[0].data=t.datasets[0].data,this.charts.workout.update();const e={totalWorkouts:document.getElementById("total-workouts"),avgDuration:document.getElementById("avg-duration"),totalCalories:document.getElementById("total-calories")};e.totalWorkouts&&(e.totalWorkouts.textContent=t.total_workouts),e.avgDuration&&(e.avgDuration.textContent=`${t.avg_duration} min`),e.totalCalories&&(e.totalCalories.textContent=`${t.total_calories} kcal`)}updateAttendanceChart(t){if(!this.charts.attendance)return;this.charts.attendance.data.labels=t.labels,this.charts.attendance.data.datasets[0].data=t.datasets[0].data,this.charts.attendance.update();const e={rate:document.getElementById("attendance-rate"),currentStreak:document.getElementById("current-streak"),bestStreak:document.getElementById("best-streak")};e.rate&&(e.rate.textContent=`${t.attendance_rate}%`),e.currentStreak&&(e.currentStreak.textContent=`${t.current_streak} days`),e.bestStreak&&(e.bestStreak.textContent=`${t.best_streak} days`)}updateGoalsChart(t){if(!this.charts.goals)return;this.charts.goals.data.datasets[0].data=[t.completed,t.in_progress,t.not_started],this.charts.goals.update();const e=document.getElementById("goals-completion-rate");if(e){const a=t.completed+t.in_progress+t.not_started,o=a>0?Math.round(t.completed/a*100):0;e.textContent=`${o}%`}}updateProgressChart(t){if(!this.charts.progress)return;this.charts.progress.data.labels=t.labels,this.charts.progress.data.datasets[0].data=t.datasets[0].data,this.charts.progress.data.datasets[0].label=t.metric_label,this.charts.progress.options.scales.y.title={display:!0,text:t.metric_unit},this.charts.progress.update();const e={current:document.getElementById("current-value"),change:document.getElementById("total-change"),trend:document.getElementById("trend-indicator")};if(e.current&&(e.current.textContent=`${t.current_value} ${t.metric_unit}`),e.change){const a=t.total_change,o=a>0?"+":"";e.change.textContent=`${o}${a} ${t.metric_unit}`,e.change.className="change-value "+(a>0?"positive":"negative")}e.trend&&(e.trend.className=`trend-indicator ${t.trend}`,e.trend.setAttribute("aria-label",`Trend: ${t.trend}`))}handlePeriodChange(t){const e=t.target.value,a=t.target.dataset.chartType;switch(a){case"workout":this.loadWorkoutData(e);break;case"attendance":this.loadAttendanceData(e);break;default:console.warn("Unknown chart type:",a)}}handleMetricChange(t){const e=t.target.value;this.loadProgressData(e)}showMessage(t,e,a){const r=a.querySelector(".chart-message")||o.UI.createElement("div","chart-message");r.className=`chart-message ${e}`,r.textContent=t,r.parentNode||a.insertBefore(r,a.firstChild),setTimeout((()=>{r.classList.add("fade-out"),setTimeout((()=>r.remove()),300)}),3e3)}destroy(){Object.values(this.charts).forEach((t=>{t&&"function"==typeof t.destroy&&t.destroy()})),this.charts={}}};document.addEventListener("DOMContentLoaded",(()=>r.init()))}();